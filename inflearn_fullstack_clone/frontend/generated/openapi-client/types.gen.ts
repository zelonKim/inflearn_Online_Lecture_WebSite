// This file is auto-generated by @hey-api/openapi-ts

export type CreateCourseDto = {
    /**
     * 코스 제목
     */
    title: string;
};

export type Account = {
    id: string;
    userId: string;
    type: string;
    provider: string;
    providerAccountId: string;
    refresh_token?: string;
    access_token?: string;
    expires_at?: number;
    token_type?: string;
    scope?: string;
    id_token?: string;
    session_state?: string;
    user: User;
};

export type Session = {
    id: string;
    sessionToken: string;
    userId: string;
    expires: string;
    user: User;
};

export type CourseEnrollment = {
    id: string;
    userId: string;
    courseId: string;
    enrolledAt: string;
    createdAt: string;
    updatedAt: string;
    course: Course;
    user: User;
};

export type CourseReview = {
    id: string;
    content: string;
    rating: number;
    userId: string;
    courseId: string;
    instructorReply?: string;
    createdAt: string;
    updatedAt: string;
    course: Course;
    user: User;
};

export type CourseComment = {
    id: string;
    content: string;
    userId: string;
    questionId: string;
    createdAt: string;
    updatedAt: string;
    question: CourseQuestion;
    user: User;
};

export type CourseQuestion = {
    id: string;
    title: string;
    content: string;
    userId: string;
    courseId: string;
    createdAt: string;
    updatedAt: string;
    course: Course;
    user: User;
    comments: Array<CourseComment>;
};

export type User = {
    id: string;
    name?: string;
    email?: string;
    emailVerified?: string;
    hashedPassword?: string;
    image?: string;
    bio?: string;
    accounts: Array<Account>;
    sessions: Array<Session>;
    courses: Array<Course>;
    courseEnrollments: Array<CourseEnrollment>;
    courseReviews: Array<CourseReview>;
    courseQuestions: Array<CourseQuestion>;
    courseComments: Array<CourseComment>;
    lectureActivities: Array<LectureActivity>;
};

export type LectureActivity = {
    id: string;
    userId: string;
    lectureId: string;
    progress: number;
    isCompleted: boolean;
    lastWatchedAt: string;
    user: User;
    lecture: Lecture;
};

export type Lecture = {
    id: string;
    title: string;
    description?: string;
    order: number;
    duration?: number;
    isPreview: boolean;
    sectionId: string;
    courseId: string;
    videoStorageInfo?: {
        [key: string]: unknown;
    };
    createdAt: string;
    updatedAt: string;
    section: Section;
    course: Course;
    activities: Array<LectureActivity>;
};

export type CourseCategory = {
    id: string;
    name: string;
    slug: string;
    description?: string;
    createdAt: string;
    updatedAt: string;
    courses: Array<Course>;
};

export type Course = {
    id: string;
    slug: string;
    title: string;
    shortDescription?: string;
    description?: string;
    thumbnailUrl?: string;
    price?: number;
    discountPrice?: number;
    level: string;
    status: string;
    instructorId: string;
    isPublished: boolean;
    createdAt: string;
    updatedAt: string;
    sections: Array<Section>;
    lectures: Array<Lecture>;
    categories: Array<CourseCategory>;
    enrollments: Array<CourseEnrollment>;
    reviews: Array<CourseReview>;
    questions: Array<CourseQuestion>;
    instructor: User;
};

export type Section = {
    id: string;
    title: string;
    description?: string;
    order: number;
    courseId: string;
    createdAt: string;
    updatedAt: string;
    course: Course;
    lectures: Array<Lecture>;
};

export type UpdateCourseDto = {
    /**
     * 코스 제목
     */
    title?: string;
    /**
     * 코스 1~2줄 짧은 설명
     */
    shortDescription?: string;
    /**
     * 코스 상세페이지 설명
     */
    description?: string;
    /**
     * 썸네일 이미지 URL
     */
    thumbnailUrl?: string;
    /**
     * 코스 가격
     */
    price?: number;
    /**
     * 코스 할인 가격
     */
    discountPrice?: number;
    /**
     * 코스 난이도
     */
    level?: string;
    /**
     * 코스 게시 여부
     */
    isPublished?: boolean;
    /**
     * 코스 카테고리 ID목록
     */
    categoryIds?: Array<string>;
};

export type AppControllerGetHelloData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type AppControllerGetHelloResponses = {
    200: unknown;
};

export type AppControllerTestUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/user-test';
};

export type AppControllerTestUserResponses = {
    200: unknown;
};

export type CoursesControllerFindAllData = {
    body?: never;
    path?: never;
    query?: {
        title?: string;
        level?: string;
        categoryId?: string;
        skip?: string;
        take?: string;
    };
    url: '/courses';
};

export type CoursesControllerFindAllResponses = {
    /**
     * 코스 목록
     */
    200: Array<Course>;
};

export type CoursesControllerFindAllResponse = CoursesControllerFindAllResponses[keyof CoursesControllerFindAllResponses];

export type CoursesControllerCreateData = {
    body: CreateCourseDto;
    path?: never;
    query?: never;
    url: '/courses';
};

export type CoursesControllerCreateResponses = {
    /**
     * 코스 생성
     */
    200: Course;
};

export type CoursesControllerCreateResponse = CoursesControllerCreateResponses[keyof CoursesControllerCreateResponses];

export type CoursesControllerDeleteData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/courses/{id}';
};

export type CoursesControllerDeleteResponses = {
    /**
     * 코스 삭제
     */
    200: Course;
};

export type CoursesControllerDeleteResponse = CoursesControllerDeleteResponses[keyof CoursesControllerDeleteResponses];

export type CoursesControllerFindOneData = {
    body?: never;
    path: {
        id: string;
    };
    query?: {
        /**
         * sections, lectures, courseReviews 등 포함한 관계 지정
         */
        include?: string;
    };
    url: '/courses/{id}';
};

export type CoursesControllerFindOneResponses = {
    /**
     * 코스 상세 정보
     */
    200: Course;
};

export type CoursesControllerFindOneResponse = CoursesControllerFindOneResponses[keyof CoursesControllerFindOneResponses];

export type CoursesControllerUpdateData = {
    body: UpdateCourseDto;
    path: {
        id: string;
    };
    query?: never;
    url: '/courses/{id}';
};

export type CoursesControllerUpdateResponses = {
    /**
     * 코스 수정
     */
    200: Course;
};

export type CoursesControllerUpdateResponse = CoursesControllerUpdateResponses[keyof CoursesControllerUpdateResponses];

export type ClientOptions = {
    baseUrl: string;
};